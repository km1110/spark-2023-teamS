openapi: "3.0.3"

info:
  title: "DeliDeV API"
  description: "サンプルとして作成したAPIです"
  version: "1.0.0"

servers:
  - url: "http://localhost:3000"
    description: "ローカル環境"
  - url: "https://api.example.com/api/v1"
    description: "本番環境"

tags:
  - name: "User"
    description: "User"
  - name: "Order"
    description: "Delivery Order"
  - name: "Delivery"
    description: "Delivering packages"
  - name: "Shift"
    description: "Shift"
  

paths:
  /users/buyers/me:
    get:
      tags:
        - "User"
      summary: "GetUserByMine"
      description: ""
      responses:
        '200':
          $ref: '#/components/responses/GetBuyerReponse'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '403':
          $ref: '#/components/responses/UnauthorizedResponse'
        '500':
          $ref: '#/components/responses/UnauthorizedResponse'
  /users/agents/me:
    get:
      tags:
        - "User"
      summary: "GetUserByMine"
      description: ""
      responses:
        '200':
          $ref: '#/components/responses/GetAgentReponse'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '403':
          $ref: '#/components/responses/UnauthorizedResponse'
        '500':
          $ref: '#/components/responses/UnauthorizedResponse'
  /users/buyers:
    post:
      tags:
        - "User"
      summary: "CreateUser"
      description: ""
      requestBody:
        $ref: '#/components/requestBodies/BuyerRequest'
      responses:
        '200':
          $ref: '#/components/responses/GetBuyerReponse'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '403':
          $ref: '#/components/responses/UnauthorizedResponse'
        '500':
          $ref: '#/components/responses/UnauthorizedResponse'
  /users/agents:
    post:
      tags:
        - "User"
      summary: "CreateUser"
      description: ""
      requestBody:
        $ref: '#/components/requestBodies/AgentRequest'
      responses:
        '200':
          $ref: '#/components/responses/GetAgentReponse'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '403':
          $ref: '#/components/responses/ForbiddenResponse'
        '500':
          $ref: '#/components/responses/InternalServerErrorResponse'
  /users/{id}:
    patch:
      tags:
        - "User"
      summary: "UpdateUser"
      description: ""
      parameters:
        - name: "id"
          in: "path"
          description: "ユーザーID"
          required: true
          schema:
            type: string
            example: "DKMYRWJC86TGUdfoYZuNXXm0ZJw2"
      requestBody:
        $ref: '#/components/requestBodies/BuyerRequest'
      responses:
        '200':
          $ref: '#/components/responses/GetBuyerReponse'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '403':
          $ref: '#/components/responses/ForbiddenResponse'
        '500':
          $ref: '#/components/responses/InternalServerErrorResponse'
  /orders:
    get:
      tags:
        - "Order"
      summary: "GetOrders"
      description: ""
      responses:
        '200':
          $ref: '#/components/responses/GetOrderReponse'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '403':
          $ref: '#/components/responses/ForbiddenResponse'
        '500':
          $ref: '#/components/responses/InternalServerErrorResponse'
    post:
      tags:
        - "Order"
      summary: "CreateOrder"
      description: ""
      requestBody:
        $ref: '#/components/requestBodies/OrderRequest'
      responses:
        '200':
          $ref: '#/components/responses/GetOrderReponse'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '403':
          $ref: '#/components/responses/ForbiddenResponse'
        '500':
          $ref: '#/components/responses/InternalServerErrorResponse'
  /orders/{id}:
    patch:
      tags:
        - "Order"
      summary: "UpdateOrder"
      description: ""
      parameters:
        - name: "id"
          in: "path"
          description: "注文ID"
          required: true
          schema:
            type: string
            example: "DKMYRWJC86TGUdfoYZuNXXm0ZJw2"
      requestBody:
        $ref: '#/components/requestBodies/OrderRequest'
      responses:
        '200':
          $ref: '#/components/responses/GetOrderReponse'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '403':
          $ref: '#/components/responses/ForbiddenResponse'
        '500':
          $ref: '#/components/responses/InternalServerErrorResponse'
  /deliveries:
    get:
      tags:
        - "Delivery"
      summary: "GetDeliveries"
      description: ""
      parameters:
        - name: "status"
          in: "query"
          description: "配達ステータス"
          required: false
          schema:
            type: string
            example: "配達中"
      responses:
        '200':
          $ref: '#/components/responses/GetDeliveriesReponse'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '403':
          $ref: '#/components/responses/ForbiddenResponse'
        '500':
          $ref: '#/components/responses/InternalServerErrorResponse'
    post:
      tags:
        - "Delivery"
      summary: "CreateDelivery"
      description: ""
      requestBody:
        $ref: '#/components/requestBodies/DeliveryRequest'
      responses:
        '200':
          $ref: '#/components/responses/GetDeliveriesReponse'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '403':
          $ref: '#/components/responses/ForbiddenResponse'
        '500':
          $ref: '#/components/responses/InternalServerErrorResponse'  
components:
  #-------------------------------
  # schemas
  #-------------------------------
  schemas:
    BuyerModel:
      description: "buyer model"
      required:
        - id
        - name
        - email
        - postal_code
        - prefecture
        - city
        - address1
        - address2
      type: object
      properties:
        id:
          type: string
          format: uuid
          description: "購入者ID"
          example: "DKMYRWJC86TGUdfoYZuNXXm0ZJw2"
          readOnly: true
        name:
          type: string
          description: "購入者名"
        email:
          type: string
          description: "購入者メールアドレス"
        address:
          type: object
          properties:
            postal_code:
              type: string
              example: "1234567"
            prefecture:
              type: string
              example: "東京都"
            city:
              type: string
              example: "hoge区"
            address1:
              type: string
              example: "hoge680-4"
            address2:
              type: string
              example: "401"

    AgentModel:
      description: "agent model"
      required:
        - id
        - name
        - email
        - vehicle
      type: object
      properties:
        id:
          type: string
          format: uuid
          description: "配達員ID"
          example: "DKMYRWJC86TGUdfoYZuNXXm0ZJw2"
          readOnly: true
        user_id:
          type: string
          format: uuid
          description: "配達員のユーザーID"
          example: "DKMYRWJC86TGUdfoYZuNXXm0ZJw2"
        vehicle:
          type: object
          properties:
            vehicle_id:
              type: string
              format: uuid
              description: "配達員の車両ID"
              example: "DKMYRWJC86TGUdfoYZuNXXm0ZJw2"
            name:
              type: string
              description: "配達員の車両名"
              example: "軽車両"
    
    OrderModel:
      description: "order model"
      required:
        - id
        - buyer_id
        - pickup_address
        - delivery_date
        - delivery_time
        - delivery_address
      type: object
      properties:
        id:
          type: string
          format: uuid
          description: "注文ID"
          example: "DKMYRWJC86TGUdfoYZuNXXm0ZJw2"
          readOnly: true
        buyer_id:
          type: string
          format: uuid
          description: "購入者ID"
          example: "DKMYRWJC86TGUdfoYZuNXXm0ZJw2"
        pickup_address:
          type: object
          properties:
            postal_code:
              type: string
              example: "1234567"
            prefecture:
              type: string
              example: "東京都"
            city:
              type: string
              example: "hoge区"
            address1:
              type: string
              example: "hoge680-4"
            address2:
              type: string
              example: "401"
        delivery_date:
          type: string
          description: "配達日"
          example: "2020-09-12"
        delivery_time:
          type: string
          description: "配達時間"
          example: "12:00"
        delivery_address:
          type: object
          properties:
            postal_code:
              type: string
              example: "1234567"
            prefecture:
              type: string
              example: "東京都"
            city:
              type: string
              example: "hoge区"
            address1:
              type: string
              example: "hoge680-4"
            address2:
              type: string
              example: "401"
            
    DeliveryModel:
      description: "delivery model"
      required:
        - id
        - agent_id
        - buyer_id
        - status
        - delivery_date
        - delivery_time
        - delivery_address
      type: object
      properties:
        id:
          type: string
          format: uuid
          description: "配達ID"
          example: "DKMYRWJC86TGUdfoYZuNXXm0ZJw2"
          readOnly: true
        agent_id:
          type: string
          format: uuid
          description: "配達員ID"
          example: "DKMYRWJC86TGUdfoYZuNXXm0ZJw2"
        buyer_id:
          type: string
          format: uuid
          description: "購入者ID"
          example: "DKMYRWJC86TGUdfoYZuNXXm0ZJw2"
        status:
          type: string
          description: "配達ステータス"
          example: "配達中"
        delivery_date:
          type: string
          description: "配達日"
          example: "2020-09-12"
        delivery_time:
          type: string
          description: "配達時間"
          example: "12:00"
        pickup_address:
          type: object
          properties:
            postal_code:
              type: string
              example: "1234567"
            prefecture:
              type: string
              example: "東京都"
            city:
              type: string
              example: "hoge区"
            address1:
              type: string
              example: "hoge680-4"
            address2:
              type: string
              example: "401"
        delivery_address:
          type: object
          properties:
            postal_code:
              type: string
              example: "1234567"
            prefecture:
              type: string
              example: "東京都"
            city:
              type: string
              example: "hoge区"
            address1:
              type: string
              example: "hoge680-4"
            address2:
              type: string
              example: "401"

    ShiftModel:
      description: "shift model"
      required:
        - id
        - agent_id
        - start_time
        - end_time
      type: object
      properties:
        id:
          type: string
          format: uuid
          description: "シフトID"
          example: "DKMYRWJC86TGUdfoYZuNXXm0ZJw2"
        agent_id:
          type: string
          format: uuid
          description: "配達員ID"
          example: "DKMYRWJC86TGUdfoYZuNXXm0ZJw2"
        start_time:
          type: string
          description: "シフト開始時間"
          example: "2020-09-12 12:00"
        end_time:
          type: string
          description: "シフト終了時間"
          example: "2020-09-12 12:00"

    TimeStampsModel:
      description: TimeStamps Model
      required:
        - createAt
      type: object
      properties:
        createAt:
          title: Created datetime.
          type: string
          format: date-time
          example: 2017-07-21T17:32:28Z
        updateAt:
          title: Updated datetime.
          type: string
          format: date-time
          example: 2020-09-12T01:41:23Z

    ErrorModel:
      description: Response Error Model.
      required:
        - code
        - message
      type: object
      properties:
        code:
          title: error code
          type: string
          example: 500
        message:
          title: error message
          type: string
          example: Internal Server Error.
    
  #-------------------------------
  # operation parameters
  #-------------------------------
    

  #-------------------------------
  # request body
  #-------------------------------
  requestBodies:
    BuyerRequest:
      description: "buyer request"
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/BuyerModel'
    AgentRequest:
      description: "agent request"
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/AgentModel'
    OrderRequest:
      description: "order request"
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/OrderModel'
    DeliveryRequest:
      description: "delivery request"
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/DeliveryModel'


  #-------------------------------
  # response
  #-------------------------------
  responses:
    GetBuyerReponse:
      description: Got Buyer.
      content:
        application/json:
          schema:
            allOf:
              - $ref: '#/components/schemas/BuyerModel'
              - $ref: '#/components/schemas/TimeStampsModel'
    GetAgentReponse:
      description: Got Agent.
      content:
        application/json:
          schema:
            allOf:
              - $ref: '#/components/schemas/AgentModel'
              - $ref: '#/components/schemas/TimeStampsModel'
    GetOrderReponse:
      description: Got Orders.
      content:
        application/json:
          schema:
            type: array
            items:
              allOf:
                - $ref: '#/components/schemas/OrderModel'
                - $ref: '#/components/schemas/TimeStampsModel'
    GetDeliveriesReponse:
      description: Got Deliveries.
      content:
        application/json:
          schema:
            type: array
            items:
              allOf:
                - $ref: '#/components/schemas/DeliveryModel'
                - $ref: '#/components/schemas/TimeStampsModel'
  
    BadRequestResponse:
      description: | 
        Bad Request.
      content:
        application/json:
          schema:
            allOf:
              - $ref: '#/components/schemas/ErrorModel'
            properties:
              code:
                example: 400
              message:
                example: Bad Request.

    UnauthorizedResponse:
      description: | 
        Unauthorized.
      content:
        application/json:
          schema:
            allOf:
              - $ref: '#/components/schemas/ErrorModel'
            properties:
              code:
                example: 401
              message:
                example: Unauthorized.

    ForbiddenResponse:
      description: | 
        Forbidden.
      content:
        application/json:
          schema:
            allOf:
              - $ref: '#/components/schemas/ErrorModel'
            properties:
              code:
                example: 403
              message:
                example: Forbidden.

    NotFoundResponse:
      description: | 
        Not Found.
      content:
        application/json:
          schema:
            allOf:
              - $ref: '#/components/schemas/ErrorModel'
            properties:
              code:
                example: 404
              message:
                example: Not Found.

    ConflictErrorResponse:
      description: | 
        Conflict.
      content:
        application/json:
          schema:
            allOf:
              - $ref: '#/components/schemas/ErrorModel'
            properties:
              code:
                example: 409
              message:
                example: Conflict.

    InternalServerErrorResponse:
      description: |-
        Internal Server Error.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorModel'

  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT